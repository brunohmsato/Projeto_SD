// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistDist.Context;

#nullable disable

namespace SistDist.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230526025257_NewConfigDB_tableNames")]
    partial class NewConfigDB_tableNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistDist.Models.AnimalModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Tutorid")
                        .HasColumnType("integer");

                    b.Property<string>("alergia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("data_nascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("especie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("peso")
                        .HasColumnType("real");

                    b.Property<string>("raca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("tutor_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Tutorid");

                    b.ToTable("animal");
                });

            modelBuilder.Entity("SistDist.Models.ConsultaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Animalid")
                        .HasColumnType("integer");

                    b.Property<int>("Veterinarioid")
                        .HasColumnType("integer");

                    b.Property<int>("animal_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("data_consulta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("diagnostico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("horario_consulta")
                        .HasColumnType("interval");

                    b.Property<float>("valor_consulta")
                        .HasColumnType("real");

                    b.Property<int>("veterinario_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Animalid");

                    b.HasIndex("Veterinarioid");

                    b.ToTable("consulta");
                });

            modelBuilder.Entity("SistDist.Models.PessoaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bairro");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("complemento");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("data_nascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("logradouro");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("telefone");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("id");

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("SistDist.Models.TutorModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Pessoaid")
                        .HasColumnType("integer");

                    b.Property<bool>("notificacao_email")
                        .HasColumnType("boolean");

                    b.Property<bool>("notificacao_whats")
                        .HasColumnType("boolean");

                    b.Property<int>("pessoa_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Pessoaid");

                    b.ToTable("tutor");
                });

            modelBuilder.Entity("SistDist.Models.VeterinarioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Pessoaid")
                        .HasColumnType("integer");

                    b.Property<string>("crmv_estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("crmv_numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ctps_estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ctps_numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ctps_serie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("data_contratacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("data_demissao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("pessoa_id")
                        .HasColumnType("integer");

                    b.Property<string>("pis_pasesp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("salario")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("Pessoaid");

                    b.ToTable("veterinario");
                });

            modelBuilder.Entity("SistDist.Models.AnimalModel", b =>
                {
                    b.HasOne("SistDist.Models.TutorModel", "Tutor")
                        .WithMany()
                        .HasForeignKey("Tutorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("SistDist.Models.ConsultaModel", b =>
                {
                    b.HasOne("SistDist.Models.AnimalModel", "Animal")
                        .WithMany()
                        .HasForeignKey("Animalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistDist.Models.VeterinarioModel", "Veterinario")
                        .WithMany()
                        .HasForeignKey("Veterinarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("SistDist.Models.TutorModel", b =>
                {
                    b.HasOne("SistDist.Models.PessoaModel", "Pessoa")
                        .WithMany()
                        .HasForeignKey("Pessoaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("SistDist.Models.VeterinarioModel", b =>
                {
                    b.HasOne("SistDist.Models.PessoaModel", "Pessoa")
                        .WithMany()
                        .HasForeignKey("Pessoaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });
#pragma warning restore 612, 618
        }
    }
}
