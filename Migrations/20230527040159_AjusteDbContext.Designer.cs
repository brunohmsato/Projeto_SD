// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistDist.Context;

#nullable disable

namespace SistDist.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230527040159_AjusteDbContext")]
    partial class AjusteDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistDist.Models.AnimalModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("alergia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("alergia");

                    b.Property<string>("cor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cor");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("data_nascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("especie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("especie");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nome");

                    b.Property<float>("peso")
                        .HasColumnType("real")
                        .HasColumnName("peso");

                    b.Property<string>("raca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("raca");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("sexo");

                    b.Property<int>("tutor_id")
                        .HasColumnType("integer")
                        .HasColumnName("tutor_id");

                    b.HasKey("id");

                    b.HasIndex("tutor_id");

                    b.ToTable("animal", (string)null);
                });

            modelBuilder.Entity("SistDist.Models.ConsultaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("animal_id")
                        .HasColumnType("integer")
                        .HasColumnName("animal_id");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("data_consulta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_consulta");

                    b.Property<string>("diagnostico")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("diagnostico");

                    b.Property<TimeSpan>("horario_consulta")
                        .HasColumnType("interval")
                        .HasColumnName("horario_consulta");

                    b.Property<float>("valor_consulta")
                        .HasColumnType("real")
                        .HasColumnName("valor_consulta");

                    b.Property<int>("veterinario_id")
                        .HasColumnType("integer")
                        .HasColumnName("veterinario_id");

                    b.HasKey("id");

                    b.HasIndex("animal_id");

                    b.HasIndex("veterinario_id");

                    b.ToTable("consulta", (string)null);
                });

            modelBuilder.Entity("SistDist.Models.PessoaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bairro");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("complemento");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("data_nascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("logradouro");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("telefone");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("id");

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("SistDist.Models.TutorModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("notificacao_email")
                        .HasColumnType("boolean")
                        .HasColumnName("notificacao_email");

                    b.Property<bool>("notificacao_whats")
                        .HasColumnType("boolean")
                        .HasColumnName("notificacao_whats");

                    b.Property<int>("pessoa_id")
                        .HasColumnType("integer")
                        .HasColumnName("pessoa_id");

                    b.HasKey("id");

                    b.HasIndex("pessoa_id")
                        .IsUnique();

                    b.ToTable("tutor", (string)null);
                });

            modelBuilder.Entity("SistDist.Models.VeterinarioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("crmv_estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("crmv_estado");

                    b.Property<string>("crmv_numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("crmv_numero");

                    b.Property<string>("ctps_estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("ctps_estado");

                    b.Property<string>("ctps_numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("ctps_numero");

                    b.Property<string>("ctps_serie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("ctps_serie");

                    b.Property<DateTime>("data_contratacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_contratacao");

                    b.Property<DateTime?>("data_demissao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_demissao");

                    b.Property<int>("pessoa_id")
                        .HasColumnType("integer")
                        .HasColumnName("pessoa_id");

                    b.Property<string>("pis_pasesp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("pis_pasesp");

                    b.Property<float>("salario")
                        .HasColumnType("real")
                        .HasColumnName("salario");

                    b.HasKey("id");

                    b.HasIndex("pessoa_id")
                        .IsUnique();

                    b.ToTable("veterinario", (string)null);
                });

            modelBuilder.Entity("SistDist.Models.AnimalModel", b =>
                {
                    b.HasOne("SistDist.Models.TutorModel", "Tutor")
                        .WithMany()
                        .HasForeignKey("tutor_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("SistDist.Models.ConsultaModel", b =>
                {
                    b.HasOne("SistDist.Models.AnimalModel", "Animal")
                        .WithMany()
                        .HasForeignKey("animal_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistDist.Models.VeterinarioModel", "Veterinario")
                        .WithMany()
                        .HasForeignKey("veterinario_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("SistDist.Models.TutorModel", b =>
                {
                    b.HasOne("SistDist.Models.PessoaModel", "Pessoa")
                        .WithOne()
                        .HasForeignKey("SistDist.Models.TutorModel", "pessoa_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("SistDist.Models.VeterinarioModel", b =>
                {
                    b.HasOne("SistDist.Models.PessoaModel", "Pessoa")
                        .WithOne()
                        .HasForeignKey("SistDist.Models.VeterinarioModel", "pessoa_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });
#pragma warning restore 612, 618
        }
    }
}
